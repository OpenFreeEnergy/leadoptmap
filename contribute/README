How to run on Schrodinger's infrastructure
- Example command:
    $SCHRODINGER/run main.py ../test_sets/sampl3_data_set/mol2_file
  where $SCHRODINGER is the environment variable whose value should be the path of installed Schrodinger package,
  main.py is the 'main.py' program, and '../test_sets/sampl3_data_set/mol2_file' is an argument for main.py,
  specifying the path of the input structure files.
- The Schrodinger package should include the Canvas product, which provides the Maximum Substructure search
  algorithm that 'main.py' depends on.
- The input structure files should be in either the mol2 or the mae file formats.


How to run on Openeye's infrastructure

- Example command:
    #step 1. to do the mcs searching and generate dot, pkl graph files which contain graph informations
        python main.py mol2_file -o filename
    
    #software needed for step 1: 
        outside software: openeye tookit (oechem);  graphviz for generating the dot file; networkx for using the graph features.
        inside script: main.py mcs.py struc.py kbase.py rule.py similarity.py graph.py 

    #note :  if we want to use Jonathan's graph planning method, we need to add build option like
        python main.py mol2_file -b -o filename
    # In the build option, user need to provide known compound list(here the knowncompound list should be in the same directory as mol2 file, and the name should be consistant with the mol2 file name)
    
    #step 2. to generate the svg file by using the pkl file generated from step 1.
        python nx2img.py filename.pkl filename2.svg -s 

    #software needed for step 2: 
        outside software: pydot ralated script: pydot.py pyparsing.py dot_parser.py ; openeye tookit(oechem oedepict)
        inside script: nx2img.py imggenerator.py 
    
    
